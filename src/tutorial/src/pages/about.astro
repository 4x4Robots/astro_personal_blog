---
import BaseLayout from "../layouts/BaseLayout.astro";

const pageTitle = "About Me";

const identity = {
    firstName: "Sarah",
    country: "Canada",
    occupation: "Technical Writer",
    hobbies: ["photography", "birdwatching", "baseball"],
};

const skills = ["HTML", "CSS", "JavaScript", "React", "Astro", "Writing Docs"];

const happy = true;
const finished = false;
const goal = 3;

const skillColor = "crimson";
const fontWeight = "bold";
const textCase = "uppercase";
---

<BaseLayout pageTitle={pageTitle}>
        <!-- Since <h1> is created in the layout component, we need to add the is:global attribute to affect every element on this page. -->
        <style is:global define:vars={{skillColor, fontWeight, textCase}}>
            h1 {
                color: purple;
                font-size: 4rem;
            }
            .skill {
                color: var(--skillColor);
                font-weight: var(--fontWeight);
                text-transform: var(--textCase);
            }
        </style>

        <h2>... and my new Astro site!</h2>

        <p>
            I am working through Astro's introductory tutorial. This is the
            second page on my website, and it's the first one I built myself!
        </p>

        <p>
            This site will update as I complete more of the tutorial, so keep
            checking back and see how my journey is going!
        </p>

        <p>Here are a few facts about me:</p>
        <ul>
        <!-- You can use JavaScript (from the frontmatter) with curly braces { } inside the html template. -->
            <li>My name is {identity.firstName}.</li>
            <li>
                I live in {identity.country} and I work as a {
                    identity.occupation
                }.
            </li>
            <!-- Astro's templating syntax is similar to the JSX syntax -->
            {
                identity.hobbies.length >= 2 && (
                    <li>
                        Two of my hobbies are: {identity.hobbies[0]} and{" "}
                        {identity.hobbies[1]}
                    </li>
                )
            }
        </ul>
        <p>My skills are:</p>
        <ul>
            {skills.map((skill) => <li class="skill">{skill}</li>)}
        </ul>

        <!-- You can use JavaScript expressions to conditionally render content. -->
        {happy && <p>I am happy to be learning Astro!</p>}

        {finished && <p>I finished this tutorial!</p>}

        {
            goal === 3 ? (
                <p>My goal is to finish in 3 days.</p>
            ) : (
                <p>My goal is not 3 days.</p>
            )
        }
        
    </BaseLayout>